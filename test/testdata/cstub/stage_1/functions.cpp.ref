#include "test_double.hpp"

namespace {
TestDouble::I_TestDouble *test_double_inst = 0;
} //NS:

namespace TestDouble {
Adapter::Adapter(I_TestDouble &inst) {
    test_double_inst = &inst;
}

Adapter::~Adapter() {
    test_double_inst = 0;
}

} //NS:TestDouble

extern "C" {
void c_func_with_struct(const struct A *a) {
    test_double_inst->c_func_with_struct(a);
}

int func_extern(int out) {
    return test_double_inst->func_extern(out);
}

void func_variadic() {
    test_double_inst->func_variadic();
}

int func_variadic_one_unnamed(char *x0, ...) {
    return test_double_inst->func_variadic_one_unnamed(x0);
}

void unnamed_params(int x0, int x1) {
    test_double_inst->unnamed_params(x0, x1);
}

}
