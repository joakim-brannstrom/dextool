#include "test_double.hpp"


extern int var_a;
extern int var_b;

namespace {
TestDouble::I_TestDouble *test_double_inst = 0;
} //NS:

namespace TestDouble {
Test_ZeroGlobals::Test_ZeroGlobals() {
}

Test_ZeroGlobals::~Test_ZeroGlobals() {
}

void Test_ZeroGlobals::var_a() {
    ::var_a = 0;
}

void Test_ZeroGlobals::var_b() {
    ::var_b = 0;
}

Adapter::Adapter(I_TestDouble &inst) {
    test_double_inst = &inst;
    Test_ZeroGlobals init_globals;
    init_globals.var_a();
    init_globals.var_b();
}

Adapter::Adapter(I_TestDouble &inst, I_TestDouble_InitGlobals &init_globals) {
    test_double_inst = &inst;
    init_globals.var_a();
    init_globals.var_b();
}

Adapter::~Adapter() {
    test_double_inst = 0;
}

} //NS:TestDouble

extern "C" {
void fun_a() {
    test_double_inst->fun_a();
}

void fun_b() {
    test_double_inst->fun_b();
}

}
