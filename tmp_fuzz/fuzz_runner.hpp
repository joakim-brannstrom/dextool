/// @file dextool_default_scheduler.hpp
/// @brief Generated by DEXTOOL_VERSION: v1.1.0-204-gb0fe35e
/// DO NOT EDIT THIS FILE, it will be overwritten on update.
#ifndef dextool_default_scheduler_hpp
#define dextool_default_scheduler_hpp
#include "dextool/i_fuzz.hpp"

#include <vector>

namespace dextool {

/// Runner for all registered fuzz scenarios.
class FuzzRunner {
public:
    typedef std::vector<Fuzz*> FuzzCases;

    FuzzRunner() {}
    ~FuzzRunner() {}

    void run() {
        for (FuzzCases::iterator it = fuzz_cases.begin(); it != fuzz_cases.end(); ++it) {
            *it->Run();
        }
    }

    void put(Fuzz *case_) {
        fuzz_cases.push_back(case_);
    }

private:
    FuzzCases fuzz_cases;
};

extern void fuzz_register_case(Fuzz *fuzz);
extern void fuzz_run_cases();

template<typename T>
FuzzRunner* create_scheduler(T &ctx) {
    return new DefaultScheduler<T>(ctx);
}

} //NS:dextool
#endif // dextool_default_scheduler_hpp
